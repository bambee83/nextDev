plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

repositories {
    mavenCentral()
}

// subprojects 안에는 하위 모듈에서 공통으로 적용할 사항들을 적어줍니다
subprojects {
    group = 'org.example'
    version = '0.0.1'
    sourceCompatibility = '11'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    // 하위 모듈에서 공통으로 사용할 라이브러리
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        // Swagger 3.0.0
        implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
        implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
        // mysql
        implementation 'mysql:mysql-connector-java'
        // log-back.xml (jdbc 설정)
//    implementation 'org.springframework.boot:spring-boot-starter-logging'
        implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
        // 서버와 관련된 설정, 메트릭 등을 확인
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        // Spring Boot에서 Redis를 사용하기 위한 의존성입니다.
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        // Spring Session을 Redis에 저장하기 위한 의존성입니다.
        implementation 'org.springframework.session:spring-session-data-redis'
        // Spring Security
        implementation 'org.springframework.boot:spring-boot-starter-security'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        runtimeOnly 'com.mysql:mysql-connector-j'
        runtimeOnly 'com.h2database:h2'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        // 테스트에서 Lombok 사용
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
    }
}

tasks.named('bootJar') {
    enabled = false // 루트 프로젝트에서는 중복된 실행 가능한 JAR 파일을 생성하는 것을 방지
}

tasks.named('jar') {
    enabled = true // 각 모듈의 라이브러리 JAR 파일을 생성하기 위해 킴
}

tasks.named('test') {
    useJUnitPlatform()
}