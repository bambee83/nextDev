# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Gradle Build & Podman-Compose Deploy
# Main 브랜치에 push 될 때 해당 workflow 실행
on:
  push:
    branches: [ "main" ]

env:
  S3_BUCKET_NAME: nextdev-deploy

jobs:
  #  build:
  #    runs-on: ubuntu-latest
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/checkout@v3
      - run: touch ./src/main/resources/application.properties
      - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
      - run: cat ./src/main/resources/application.yml

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # (2) JDK 11 세팅
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # (3) Gradle build
      #     - name: Grant execute permission for gradlew
      #       run: chmod +x gradlew
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1


      # (4) Docker Hub에 이미지 빌드 및 푸시
      - name: Make Directory & zip file
        run: |
          mkdir -p deploy
          cp *.jar ./deploy
          zip -r ./nextDev.zip ./deploy
          

      # (5) 원격 서버에 배포
      - name: Configure AWS credentials & Upload to S3
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
        run: aws s3 cp --region ap-northeast-2 ./nextDev.zip s3://$S3_BUCKET_NAME/