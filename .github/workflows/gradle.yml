# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Gradle Build & Podman-Compose Deploy
# Main 브랜치에 push 될 때 해당 workflow 실행
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
    build:
      runs-on: ubuntu-latest

    steps:
      # (1) JDK 11 세팅
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      ## 1) git ignore에 등록된 application.properties 파일 생성해주기
      - name: make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml
        shell: bash

      ## 2) 스프링 프로젝트 jar 파일 빌드
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build

      ## 3) Docker Hub에 이미지 push 하기
      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_USERNAME }}
          docker build -t bambee-friend .
          docker tag bambee-friend bambee83/bambee-friend:${GITHUB_SHA::7}
          docker push bambee83/bambee-friend:${GITHUB_SHA::7}

      ## 4) Docker Hub에 Push한 이미지를 리눅스 서버에 받아와서 run
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username:  ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          port: 22
          envs: GITHUB_SHA
          script: |
            podman login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            podman pull bambee83/bambee-friend:${GITHUB_SHA::7}
            podman tag bambee83/bambee-friend:${GITHUB_SHA::7} bambee-friend
            echo "Tagging Image..."